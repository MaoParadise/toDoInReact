{"version":3,"sources":["TodoContext/index.js","Hooks/useLocalStorage.js","components/TodoCounter/TodoCounter.js","components/TodoSearch/TodoSearch.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/CreateTodoButton/CreateTodoButton.js","components/modal/Modal.js","components/TodoForm/TodoForm.js","components/loadingTodos/LoadingTodos.js","App/AppUI.js","App/App.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","target","TodoItem","onClick","onComplete","onDelete","TodoList","CreateTodoButton","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","LoadingTodos","AppUI","Fragment","Array","fill","map","index","App","render"],"mappings":"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","file":"static/js/main.bcfe0286.chunk.js","sourcesContent":["import React from \"react\";\nimport { useLocalStorage } from '../Hooks/useLocalStorage'\n\nconst TodoContext = React.createContext();\n\nconst TodoProvider = (props) => {\n\n  const {\n    item: todos, \n    saveItem: saveTodos, \n    loading,\n    error} = useLocalStorage('TODOS_V1', []);\n  \n  const [searchValue, setSearchValue] = React.useState('');\n  const [openModal, setOpenModal] = React.useState(false)\n\n  const completedTodos = todos.filter(todo => !!todo.completed).length; // todo.completed == true IGUAL A !!todo.completed\n  const totalTodos = todos.length;\n\n  let searchedTodos = [];\n\n  if(!searchValue.length >= 1){\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n\n      return todoText.includes(searchText);\n\n    });\n  }\n\n  const addTodo = (text) =>{\n    const newTodos = [...todos];\n    newTodos.push({\n      completed: false,\n      text\n    }); \n    saveTodos(newTodos)\n  };\n\n \n  const completeTodo = (text) =>{\n    const todoIndex = todos.findIndex(todo => todo.text === text );\n\n    const newTodos = [...todos];\n\n    newTodos[todoIndex].completed = !newTodos[todoIndex].completed;\n    saveTodos(newTodos)\n  };\n\n  const deleteTodo = (text) =>{\n    const todoIndex = todos.findIndex(todo => todo.text === text );\n\n    const newTodos = [...todos];\n\n    newTodos.splice(todoIndex,1);\n\n    saveTodos(newTodos)\n  };\n\n    return (\n        <TodoContext.Provider value={{\n            loading,\n            error,\n            totalTodos,\n            addTodo,\n            completedTodos,\n            searchValue,\n            searchedTodos,\n            setSearchValue,\n            completeTodo,\n            deleteTodo,\n            setOpenModal,\n            openModal\n        }}>\n            {props.children}\n        </TodoContext.Provider>\n    );\n}\n\nexport {TodoContext, TodoProvider};","import React from \"react\";\n\nfunction useLocalStorage(itemName, initialValue){\n\n    const [error, setError] = React.useState(false);\n    const [loading, setLoading] = React.useState(true);\n    const [item, setItem] = React.useState(initialValue);\n\n    React.useEffect(() => {\n      setTimeout(() => {\n        try{\n          const localStorageItem = localStorage.getItem(itemName);\n          let parsedItem;\n        \n          if(!localStorageItem){ // asi buscas si un elemento es null false o incluso vacio\n        \n            localStorage.setItem(itemName, JSON.stringify(initialValue));\n            parsedItem = initialValue;\n        \n          }else{\n        \n            parsedItem = JSON.parse(localStorageItem);\n        \n          }\n\n          setItem(parsedItem);\n          setLoading(false);\n        }catch(error){\n          setError(error);\n        }\n\n      },5000)\n    })\n    \n  \n  \n    const saveItem = (newItem) => {\n      try{\n        const stringifiedItem = JSON.stringify(newItem);\n        setItem(newItem);\n        localStorage.setItem(itemName, stringifiedItem);\n      }catch(error){\n        setError(error);\n      }\n    }\n  \n    return {\n      item,\n      saveItem,\n      loading,\n      error\n    };\n  \n  }\n\n  export { useLocalStorage }","import React from \"react\";\nimport { TodoContext } from \"../../TodoContext\";\nimport './TodoCounter.css'\n\nconst TodoCounter = ()=>{\n   const {totalTodos, completedTodos} = React.useContext(TodoContext)\n\n   return(\n   <h2 className='TodoCounter' > Haz completado {completedTodos} de {totalTodos} ToDo's </h2>\n   ) \n}\n\nexport { TodoCounter };","import React from \"react\";\nimport { TodoContext } from \"../../TodoContext\";\nimport './TodoSearch.css'\n\nconst TodoSearch = () => {\n    const { searchValue, setSearchValue } = React.useContext(TodoContext)\n\n    const onChangeValueChange = (event) =>{\n         setSearchValue(event.target.value)\n    };\n\n    return(\n        <input\n            className='TodoSearch'\n            placeholder='Escribe algo...'\n            value={searchValue}\n            onChange={onChangeValueChange}\n        />\n    );\n}\n\nexport { TodoSearch };","import React from \"react\";\nimport './TodoItem.css';\n\nconst TodoItem = (props) =>{\n\n\n\n    return(\n        <li className='TodoItem'>\n            <span\n                className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\n                onClick={props.onComplete}\n            >\n                âˆš\n            </span>\n\n            <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n                {props.text}\n            </p> \n\n            <span\n                className=\"Icon Icon-delete\"\n                onClick={props.onDelete}\n            >\n                X\n            </span>\n        </li>\n    );\n}\n\nexport {TodoItem}","import React from \"react\";\nimport './TodoList.css'\n\nconst TodoList = (props) =>{\n    return (\n        <section>\n            <ul>\n                {props.children}\n            </ul>\n        </section>\n    );\n}\n\nexport {TodoList};","import React from \"react\";\nimport './CreateTodoButton.css'\n\nconst CreateTodoButton = (props) =>{\n    const onToggleButton = () => {\n        // como lo hizo el profe...  props.setOpenModal(prevState =>!prevState)\n        props.setOpenModal(!props.openModal);\n    }\n\n    return( \n    <button\n        className='CreateTodoButton'\n        onClick={ onToggleButton }\n        // Cada vez que el evento lleve parentesis en la funcion, se tiene que\n        // agregar una arrow functions!!! \n    > \n        + \n    </button>\n    );\n}\n\nexport {CreateTodoButton}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './Modal.css'\n\nconst Modal = ({ children }) => {\n\n    return ReactDOM.createPortal(\n        <div className=\"ModalBackground\">\n            {children}\n        </div>,\n        document.getElementById('modal')\n    );\n};\n\nexport { Modal }","import React from \"react\";\nimport { TodoContext } from \"../../TodoContext\";\nimport './TodoForm.css'\n\nconst TodoForm = () => {\n\n    const [newTodoValue, setNewTodoValue] = React.useState('');\n\n    const {\n        addTodo,\n        setOpenModal\n    } = React.useContext(TodoContext);\n\n    const onCancel = () =>{\n        setOpenModal(false);\n    };\n\n    const onChange = (event) =>{\n        // TODO\n        setNewTodoValue(event.target.value);\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        addTodo(newTodoValue);\n        setOpenModal(false);\n    }\n\n\n    return(\n        <form onSubmit={onSubmit}>\n            <label>..</label>\n            <textarea\n                value={newTodoValue}\n                onChange={onChange}\n                placeholder=\"coloque aqui su actividad que quiere agregar\">\n            </textarea>\n            <div className='TodoForm-buttonContainer'>\n                <button className='TodoForm-button TodoForm-button-cancel' onClick={onCancel} type=\"button\">\n                    Cancelar\n                </button>\n                <button className='TodoForm-button TodoForm-button-add' type=\"submit\">\n                    AÃ±adir\n                </button>\n            </div>\n        </form>\n    );\n}\n\nexport {TodoForm}","import React from \"react\"\nimport './LoadingTodos.css'\n\nconst LoadingTodos = (props) => {\n    return(\n        <li className='TodoLoading'>\n            <span\n                className={`Icon Icon-check 'Icon-check--active'}`}\n            >\n                âˆš\n            </span>\n\n            <p className={`TodoLoading-p 'TodoLoading-p--complete'}`}>\n                Cargando TODO's ...\n            </p> \n\n            <span\n                className=\"Icon Icon-delete\"\n            >\n                X\n            </span>\n        </li>\n    )\n}\n\n  \n\n\nexport {LoadingTodos}","import React from \"react\";\nimport { TodoCounter } from '../components/TodoCounter/TodoCounter'\nimport { TodoSearch } from '../components/TodoSearch/TodoSearch'\nimport { TodoItem } from '../components/TodoItem/TodoItem'\nimport { TodoList } from '../components/TodoList/TodoList'\nimport { CreateTodoButton } from '../components/CreateTodoButton/CreateTodoButton'\nimport { TodoContext } from \"../TodoContext\";\nimport { Modal } from \"../components/modal/Modal\";\nimport { TodoForm } from \"../components/TodoForm/TodoForm\";\nimport { LoadingTodos } from \"../components/loadingTodos/LoadingTodos\";\n\nconst AppUI = () =>{\n\n    const { \n            error,\n            loading,\n            searchedTodos,\n            completeTodo,\n            deleteTodo,\n            openModal,\n            setOpenModal\n          } = React.useContext(TodoContext);\n\n    return(\n      <React.Fragment>\n      \n      <TodoCounter/> \n      \n      <TodoSearch />\n          <TodoList>\n\n          {error && <p> Desesperate, hubo un error </p>}\n          {loading && \n            new Array(4).fill().map((item, index)=>(\n              <LoadingTodos key={index} />\n          ))}\n          {(!loading && !searchedTodos.length) && <h2> CREA TU PRIMER TO DO </h2>}\n  \n  \n  \n          {searchedTodos.map(todo => (\n            <TodoItem\n              key={todo.text}\n              text={todo.text}\n              completed={todo.completed}\n              onComplete={() => completeTodo(todo.text)}\n              onDelete={() => deleteTodo(todo.text)}\n            />\n          ))}\n          </TodoList> \n        \n        {!!openModal && (\n          <Modal>\n            <TodoForm />\n          </Modal>\n        )}\n      \n      <CreateTodoButton \n        openModal={openModal}\n        setOpenModal={setOpenModal}\n      /> \n     \n    </React.Fragment>\n    );\n\n}\n\nexport { AppUI };","import React from \"react\";\nimport { AppUI } from './AppUI'\nimport { TodoProvider } from \"../TodoContext\";\n\n const defaultTodos = [\n   {\n     text: 'cortar cebolla',\n     completed: false\n   },\n   {\n     text: 'tomar curso',\n     completed: true\n   },\n   {\n     text: 'hacer tareas varias',\n     completed: false\n   },\n   {\n     text: 'nuevo text0',\n    completed: true\n   }\n ];\n \n\n\nfunction App() {\n\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}